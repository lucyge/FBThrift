/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

#pragma once
#include <src/gen-cpp2/NestedContainers.h>

#include <folly/futures/Future.h>
#include <folly/futures/Promise.h>
#include <folly/Unit.h>

#include <cstdint>
#include <functional>
#include <map>
#include <memory>
#include <set>
#include <vector>

namespace cpp2 {

class NestedContainersClientWrapper {
  protected:
    std::shared_ptr<cpp2::NestedContainersAsyncClient> async_client;
  public:
    explicit NestedContainersClientWrapper(
      std::shared_ptr<cpp2::NestedContainersAsyncClient> async_client);
    virtual ~NestedContainersClientWrapper();

    folly::Future<folly::Unit> disconnect();
    void disconnectInLoop();
    void setPersistentHeader(const std::string& key, const std::string& value);

    folly::Future<folly::Unit> mapList(
      std::map<int32_t,std::vector<int32_t>> arg_foo);
    folly::Future<folly::Unit> mapSet(
      std::map<int32_t,std::set<int32_t>> arg_foo);
    folly::Future<folly::Unit> listMap(
      std::vector<std::map<int32_t,int32_t>> arg_foo);
    folly::Future<folly::Unit> listSet(
      std::vector<std::set<int32_t>> arg_foo);
    folly::Future<folly::Unit> turtles(
      std::vector<std::vector<std::map<int32_t,std::map<int32_t,std::set<int32_t>>>>> arg_foo);
};


} // namespace cpp2
