#
# Autogenerated by Thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#  @generated
#

from cpython.ref cimport PyObject
from libc.stdint cimport int8_t, int16_t, int32_t, int64_t
from libcpp cimport bool as cbool
from libcpp.map cimport map as cmap, pair as cpair
from libcpp.memory cimport shared_ptr, unique_ptr
from libcpp.set cimport set as cset
from libcpp.string cimport string
from libcpp.vector cimport vector

from folly cimport cFollyFuture, cFollyTry, cFollyUnit

cimport module.types as _module_types

cimport includes.types as _includes_types

cdef extern from "src/gen-cpp2/EmptyService.h" namespace "some::valid::ns":
  cdef cppclass cEmptyServiceAsyncClient "some::valid::ns::EmptyServiceAsyncClient":
      pass

cdef extern from "<utility>" namespace "std":
  cdef unique_ptr[cEmptyServiceClientWrapper] move(unique_ptr[cEmptyServiceClientWrapper])

cdef extern from "src/gen-cpp2/ReturnService.h" namespace "some::valid::ns":
  cdef cppclass cReturnServiceAsyncClient "some::valid::ns::ReturnServiceAsyncClient":
      pass

cdef extern from "<utility>" namespace "std":
  cdef unique_ptr[cReturnServiceClientWrapper] move(unique_ptr[cReturnServiceClientWrapper])

cdef extern from "src/gen-cpp2/ParamService.h" namespace "some::valid::ns":
  cdef cppclass cParamServiceAsyncClient "some::valid::ns::ParamServiceAsyncClient":
      pass

cdef extern from "<utility>" namespace "std":
  cdef unique_ptr[cParamServiceClientWrapper] move(unique_ptr[cParamServiceClientWrapper])

cdef extern from "src/gen-py3/module/clients_wrapper.h" namespace "some::valid::ns":
  cdef cppclass cEmptyServiceClientWrapper "some::valid::ns::EmptyServiceClientWrapper":
    cEmptyServiceClientWrapper(
      shared_ptr[cEmptyServiceAsyncClient] async_client)
    cFollyFuture[cFollyUnit] disconnect()
    void setPersistentHeader(const string& key, const string& value)



  cdef cppclass cReturnServiceClientWrapper "some::valid::ns::ReturnServiceClientWrapper":
    cReturnServiceClientWrapper(
      shared_ptr[cReturnServiceAsyncClient] async_client)
    cFollyFuture[cFollyUnit] disconnect()
    void setPersistentHeader(const string& key, const string& value)

    cFollyFuture[cFollyUnit] noReturn()
    cFollyFuture[cbool] boolReturn()
    cFollyFuture[int16_t] i16Return()
    cFollyFuture[int32_t] i32Return()
    cFollyFuture[int64_t] i64Return()
    cFollyFuture[float] floatReturn()
    cFollyFuture[double] doubleReturn()
    cFollyFuture[string] stringReturn()
    cFollyFuture[string] binaryReturn()
    cFollyFuture[cmap[string,int64_t]] mapReturn()
    cFollyFuture[int32_t] simpleTypedefReturn()
    cFollyFuture[vector[cmap[_module_types.cEmpty,_module_types.cMyStruct]]] complexTypedefReturn()
    cFollyFuture[vector[vector[vector[cmap[_module_types.cEmpty,_module_types.cMyStruct]]]]] list_mostComplexTypedefReturn()
    cFollyFuture[_module_types.cMyEnumA] enumReturn()
    cFollyFuture[vector[_module_types.cMyEnumA]] list_EnumReturn()
    cFollyFuture[_module_types.cMyStruct] structReturn()
    cFollyFuture[cset[_module_types.cMyStruct]] set_StructReturn()
    cFollyFuture[_module_types.cComplexUnion] unionReturn()
    cFollyFuture[vector[_module_types.cComplexUnion]] list_UnionReturn()
    cFollyFuture[_module_types.folly_IOBuf] readDataEb(
      int64_t arg_size,)
    cFollyFuture[_module_types.std_unique_ptr_folly_IOBuf] readData(
      int64_t arg_size,)


  cdef cppclass cParamServiceClientWrapper "some::valid::ns::ParamServiceClientWrapper":
    cParamServiceClientWrapper(
      shared_ptr[cParamServiceAsyncClient] async_client)
    cFollyFuture[cFollyUnit] disconnect()
    void setPersistentHeader(const string& key, const string& value)

    cFollyFuture[cFollyUnit] void_ret_i16_param(
      int16_t arg_param1,)
    cFollyFuture[cFollyUnit] void_ret_byte_i16_param(
      int8_t arg_param1,
      int16_t arg_param2,)
    cFollyFuture[cFollyUnit] void_ret_map_param(
      cmap[string,int64_t] arg_param1,)
    cFollyFuture[cFollyUnit] void_ret_map_setlist_param(
      cmap[string,int64_t] arg_param1,
      cset[vector[string]] arg_param2,)
    cFollyFuture[cFollyUnit] void_ret_map_typedef_param(
      int32_t arg_param1,)
    cFollyFuture[cFollyUnit] void_ret_enum_param(
      _module_types.cMyEnumA arg_param1,)
    cFollyFuture[cFollyUnit] void_ret_struct_param(
      _module_types.cMyStruct arg_param1,)
    cFollyFuture[cFollyUnit] void_ret_listunion_param(
      vector[_module_types.cComplexUnion] arg_param1,)
    cFollyFuture[cbool] bool_ret_i32_i64_param(
      int32_t arg_param1,
      int64_t arg_param2,)
    cFollyFuture[cbool] bool_ret_map_param(
      cmap[string,int64_t] arg_param1,)
    cFollyFuture[cbool] bool_ret_union_param(
      _module_types.cComplexUnion arg_param1,)
    cFollyFuture[int64_t] i64_ret_float_double_param(
      float arg_param1,
      double arg_param2,)
    cFollyFuture[int64_t] i64_ret_string_typedef_param(
      string arg_param1,
      cset[vector[vector[cmap[_module_types.cEmpty,_module_types.cMyStruct]]]] arg_param2,)
    cFollyFuture[int64_t] i64_ret_i32_i32_i32_i32_i32_param(
      int32_t arg_param1,
      int32_t arg_param2,
      int32_t arg_param3,
      int32_t arg_param4,
      int32_t arg_param5,)
    cFollyFuture[double] double_ret_setstruct_param(
      cset[_module_types.cMyStruct] arg_param1,)
    cFollyFuture[string] string_ret_string_param(
      string arg_param1,)
    cFollyFuture[string] binary_ret_binary_param(
      string arg_param1,)
    cFollyFuture[cmap[string,int64_t]] map_ret_bool_param(
      cbool arg_param1,)
    cFollyFuture[vector[cbool]] list_ret_map_setlist_param(
      cmap[int32_t,vector[string]] arg_param1,
      vector[string] arg_param2,)
    cFollyFuture[cmap[cset[vector[int32_t]],cmap[vector[cset[string]],string]]] mapsetlistmapliststring_ret_listlistlist_param(
      vector[vector[vector[vector[int32_t]]]] arg_param1,)
    cFollyFuture[int32_t] typedef_ret_i32_param(
      int32_t arg_param1,)
    cFollyFuture[vector[int32_t]] listtypedef_ret_typedef_param(
      vector[cmap[_module_types.cEmpty,_module_types.cMyStruct]] arg_param1,)
    cFollyFuture[_module_types.cMyEnumA] enum_ret_double_param(
      double arg_param1,)
    cFollyFuture[_module_types.cMyEnumA] enum_ret_double_enum_param(
      double arg_param1,
      _module_types.cMyEnumA arg_param2,)
    cFollyFuture[vector[_module_types.cMyEnumA]] listenum_ret_map_param(
      cmap[string,int64_t] arg_param1,)
    cFollyFuture[_module_types.cMyStruct] struct_ret_i16_param(
      int16_t arg_param1,)
    cFollyFuture[cset[_module_types.cMyStruct]] setstruct_ret_set_param(
      cset[string] arg_param1,)
    cFollyFuture[_module_types.cComplexUnion] union_ret_i32_i32_param(
      int32_t arg_param1,
      int32_t arg_param2,)
    cFollyFuture[vector[_module_types.cComplexUnion]] listunion_string_param(
      string arg_param1,)

